"""Initial migration

Revision ID: 4381700d55a1
Revises: 
Create Date: 2025-10-18 15:45:55.559590

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4381700d55a1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stocks',
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('sector', sa.String(length=100), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('market_cap', sa.Float(), nullable=True),
    sa.Column('pe_ratio', sa.Float(), nullable=True),
    sa.Column('eps', sa.Float(), nullable=True),
    sa.Column('dividend_yield', sa.Float(), nullable=True),
    sa.Column('beta', sa.Float(), nullable=True),
    sa.Column('week_52_high', sa.Float(), nullable=True),
    sa.Column('week_52_low', sa.Float(), nullable=True),
    sa.Column('reddit_sentiment', sa.Float(), nullable=True),
    sa.Column('news_sentiment', sa.Float(), nullable=True),
    sa.Column('overall_sentiment', sa.Float(), nullable=True),
    sa.Column('reddit_mentions_24h', sa.Integer(), nullable=True),
    sa.Column('reddit_mentions_7d', sa.Integer(), nullable=True),
    sa.Column('news_articles_24h', sa.Integer(), nullable=True),
    sa.Column('news_articles_7d', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('symbol')
    )
    op.create_table('user_insights',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(length=50), nullable=False),
    sa.Column('stock_symbol', sa.String(length=10), nullable=True),
    sa.Column('insight_type', sa.String(length=50), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('detailed_content', sa.Text(), nullable=True),
    sa.Column('action_items', sa.Text(), nullable=True),
    sa.Column('relevance_score', sa.Float(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('urgency_level', sa.String(length=20), nullable=True),
    sa.Column('based_on_sources', sa.Text(), nullable=True),
    sa.Column('related_data_ids', sa.Text(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('is_dismissed', sa.Boolean(), nullable=True),
    sa.Column('is_bookmarked', sa.Boolean(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_expired', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_insights_stock_symbol'), 'user_insights', ['stock_symbol'], unique=False)
    op.create_index(op.f('ix_user_insights_user_id'), 'user_insights', ['user_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('investment_style', sa.String(length=50), nullable=True),
    sa.Column('risk_tolerance', sa.String(length=50), nullable=True),
    sa.Column('preferred_sectors', sa.Text(), nullable=True),
    sa.Column('watchlist_symbols', sa.Text(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('email_verified_at', sa.DateTime(), nullable=True),
    sa.Column('tier', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('news_articles',
    sa.Column('id', sa.String(length=100), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('url', sa.String(length=1000), nullable=False),
    sa.Column('author', sa.String(length=255), nullable=True),
    sa.Column('image_url', sa.String(length=1000), nullable=True),
    sa.Column('mentioned_stocks', sa.Text(), nullable=True),
    sa.Column('primary_stock', sa.String(length=10), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('sentiment_label', sa.String(length=20), nullable=True),
    sa.Column('sentiment_confidence', sa.Float(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('importance_score', sa.Float(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('is_relevant', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['primary_stock'], ['stocks.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_news_articles_primary_stock'), 'news_articles', ['primary_stock'], unique=False)
    op.create_table('reddit_posts',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('subreddit', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('author', sa.String(length=100), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('url', sa.String(length=500), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('upvote_ratio', sa.Float(), nullable=True),
    sa.Column('num_comments', sa.Integer(), nullable=True),
    sa.Column('mentioned_stocks', sa.Text(), nullable=True),
    sa.Column('primary_stock', sa.String(length=10), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('sentiment_label', sa.String(length=20), nullable=True),
    sa.Column('sentiment_confidence', sa.Float(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('is_relevant', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['primary_stock'], ['stocks.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reddit_posts_primary_stock'), 'reddit_posts', ['primary_stock'], unique=False)
    op.create_index(op.f('ix_reddit_posts_subreddit'), 'reddit_posts', ['subreddit'], unique=False)
    op.create_table('research_reports',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('stock_symbol', sa.String(length=10), nullable=False),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('executive_summary', sa.Text(), nullable=True),
    sa.Column('full_report', sa.Text(), nullable=True),
    sa.Column('key_findings', sa.Text(), nullable=True),
    sa.Column('investment_score', sa.Float(), nullable=True),
    sa.Column('risk_level', sa.String(length=20), nullable=True),
    sa.Column('confidence_level', sa.Float(), nullable=True),
    sa.Column('sources_used', sa.Text(), nullable=True),
    sa.Column('data_quality_score', sa.Float(), nullable=True),
    sa.Column('fundamental_analysis', sa.Text(), nullable=True),
    sa.Column('technical_analysis', sa.Text(), nullable=True),
    sa.Column('sentiment_analysis', sa.Text(), nullable=True),
    sa.Column('competitive_analysis', sa.Text(), nullable=True),
    sa.Column('recommendation', sa.String(length=20), nullable=True),
    sa.Column('target_price', sa.Float(), nullable=True),
    sa.Column('time_horizon', sa.String(length=20), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.Column('processing_time_seconds', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['stock_symbol'], ['stocks.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_research_reports_stock_symbol'), 'research_reports', ['stock_symbol'], unique=False)
    op.create_table('sentiment_analyses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('stock_symbol', sa.String(length=10), nullable=False),
    sa.Column('period', sa.String(length=10), nullable=False),
    sa.Column('period_start', sa.DateTime(), nullable=False),
    sa.Column('period_end', sa.DateTime(), nullable=False),
    sa.Column('reddit_sentiment_avg', sa.Float(), nullable=True),
    sa.Column('reddit_posts_count', sa.Integer(), nullable=True),
    sa.Column('reddit_comments_count', sa.Integer(), nullable=True),
    sa.Column('reddit_total_score', sa.Integer(), nullable=True),
    sa.Column('news_sentiment_avg', sa.Float(), nullable=True),
    sa.Column('news_articles_count', sa.Integer(), nullable=True),
    sa.Column('news_positive_count', sa.Integer(), nullable=True),
    sa.Column('news_negative_count', sa.Integer(), nullable=True),
    sa.Column('news_neutral_count', sa.Integer(), nullable=True),
    sa.Column('overall_sentiment', sa.Float(), nullable=True),
    sa.Column('sentiment_trend', sa.String(length=20), nullable=True),
    sa.Column('volatility', sa.Float(), nullable=True),
    sa.Column('top_keywords', sa.String(length=500), nullable=True),
    sa.Column('notable_events', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['stock_symbol'], ['stocks.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sentiment_analyses_stock_symbol'), 'sentiment_analyses', ['stock_symbol'], unique=False)
    op.create_table('reddit_comments',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('post_id', sa.String(length=20), nullable=False),
    sa.Column('author', sa.String(length=100), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('mentioned_stocks', sa.Text(), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('sentiment_label', sa.String(length=20), nullable=True),
    sa.Column('sentiment_confidence', sa.Float(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('is_relevant', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['reddit_posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reddit_comments_post_id'), 'reddit_comments', ['post_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reddit_comments_post_id'), table_name='reddit_comments')
    op.drop_table('reddit_comments')
    op.drop_index(op.f('ix_sentiment_analyses_stock_symbol'), table_name='sentiment_analyses')
    op.drop_table('sentiment_analyses')
    op.drop_index(op.f('ix_research_reports_stock_symbol'), table_name='research_reports')
    op.drop_table('research_reports')
    op.drop_index(op.f('ix_reddit_posts_subreddit'), table_name='reddit_posts')
    op.drop_index(op.f('ix_reddit_posts_primary_stock'), table_name='reddit_posts')
    op.drop_table('reddit_posts')
    op.drop_index(op.f('ix_news_articles_primary_stock'), table_name='news_articles')
    op.drop_table('news_articles')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_insights_user_id'), table_name='user_insights')
    op.drop_index(op.f('ix_user_insights_stock_symbol'), table_name='user_insights')
    op.drop_table('user_insights')
    op.drop_table('stocks')
    # ### end Alembic commands ###
