version: '3.8'

services:
  # PostgreSQL Database - DISABLED: Using production Cloud SQL instead
  # Uncomment this if you want to use a local database for development
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: akleao-postgres
  #   environment:
  #     POSTGRES_USER: akleao
  #     POSTGRES_PASSWORD: akleao_dev_password
  #     POSTGRES_DB: akleao
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U akleao"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: akleao-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: akleao-api
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://akleao:YTmLuVfpJPuTwYiG%2FFaLUFoY5me1TYyY1UAlc7TvGUw%3D@34.44.5.181:5432/akleao
      - REDIS_URL=redis://redis:6379
      - ENV=development
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev-secret-change-in-production-12345678}
      - CORS_ORIGINS=["http://localhost:3000"]
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_USER_AGENT=${REDDIT_USER_AGENT:-AkleaoFinance/1.0}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./api-gateway:/app
      - ./shared:/app/shared
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Reddit Scraper Scheduler - Creates jobs every 15 minutes
  reddit-scheduler:
    build:
      context: ./workers/reddit-scraper
      dockerfile: Dockerfile
    container_name: akleao-reddit-scheduler
    environment:
      - DATABASE_URL=postgresql://akleao:YTmLuVfpJPuTwYiG%2FFaLUFoY5me1TYyY1UAlc7TvGUw%3D@34.44.5.181:5432/akleao
      - REDIS_URL=redis://redis:6379
      - SCRAPE_INTERVAL_MINUTES=${SCRAPE_INTERVAL_MINUTES:-15}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./workers/reddit-scraper:/app
      - ./shared:/app/shared
    command: python scheduler.py
    restart: unless-stopped

  # Reddit Scraper Worker - Processes jobs from the queue
  reddit-scraper:
    build:
      context: ./workers/reddit-scraper
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://akleao:YTmLuVfpJPuTwYiG%2FFaLUFoY5me1TYyY1UAlc7TvGUw%3D@34.44.5.181:5432/akleao
      - REDIS_URL=redis://redis:6379
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_USER_AGENT=${REDDIT_USER_AGENT:-AkleaoFinance/1.0}
      - POLL_INTERVAL_SECONDS=${SCRAPER_POLL_INTERVAL_SECONDS:-5}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./workers/reddit-scraper:/app
      - ./shared:/app/shared
    command: python -u main_job_based.py
    restart: unless-stopped
    deploy:
      replicas: 2  # Run 2 concurrent workers for faster processing

  # Comment Scraper - Continuously rescapes comments for tracked posts
  comment-scraper:
    build:
      context: ./workers/comment-scraper
      dockerfile: Dockerfile
    container_name: akleao-comment-scraper
    environment:
      - DATABASE_URL=postgresql://akleao:YTmLuVfpJPuTwYiG%2FFaLUFoY5me1TYyY1UAlc7TvGUw%3D@34.44.5.181:5432/akleao
      - REDIS_URL=redis://redis:6379
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_USER_AGENT=${REDDIT_USER_AGENT:-AkleaoFinance/1.0}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./workers/comment-scraper:/app
      - ./shared:/app/shared
    restart: unless-stopped

  # Deep Research Worker - Multiple instances for concurrent processing
  deep-research:
    build:
      context: ./workers/deep-research
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://akleao:YTmLuVfpJPuTwYiG%2FFaLUFoY5me1TYyY1UAlc7TvGUw%3D@34.44.5.181:5432/akleao
      - REDIS_URL=redis://redis:6379
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - POLL_INTERVAL_SECONDS=${RESEARCH_POLL_INTERVAL_SECONDS:-5}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./workers/deep-research:/app
      - ./shared:/app/shared
    restart: unless-stopped
    deploy:
      replicas: 3  # Run 3 concurrent workers

  # Future workers (Phase 2+) - commented out for now
  # Uncomment these as you build them

  # # Metrics Aggregator (Phase 2A)
  # metrics-aggregator:
  #   build:
  #     context: ./workers/metrics-aggregator
  #     dockerfile: Dockerfile
  #   container_name: akleao-metrics-aggregator
  #   environment:
  #     - DATABASE_URL=postgresql://akleao:akleao_dev_password@postgres:5432/akleao
  #     - REDIS_URL=redis://redis:6379
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   volumes:
  #     - ./workers/metrics-aggregator:/app
  #     - ./shared:/app/shared
  #   restart: unless-stopped

  # # Anomaly Detector (Phase 2A)
  # anomaly-detector:
  #   build:
  #     context: ./workers/anomaly-detector
  #     dockerfile: Dockerfile
  #   container_name: akleao-anomaly-detector
  #   environment:
  #     - DATABASE_URL=postgresql://akleao:akleao_dev_password@postgres:5432/akleao
  #     - REDIS_URL=redis://redis:6379
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   volumes:
  #     - ./workers/anomaly-detector:/app
  #     - ./shared:/app/shared
  #   restart: unless-stopped

  # # Sentiment Analyzer (Phase 2B)
  # sentiment-analyzer:
  #   build:
  #     context: ./workers/sentiment-analyzer
  #     dockerfile: Dockerfile
  #   container_name: akleao-sentiment-analyzer
  #   environment:
  #     - DATABASE_URL=postgresql://akleao:akleao_dev_password@postgres:5432/akleao
  #     - REDIS_URL=redis://redis:6379
  #     - OPENAI_API_KEY=${OPENAI_API_KEY}
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   volumes:
  #     - ./workers/sentiment-analyzer:/app
  #     - ./shared:/app/shared
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: akleao-network
